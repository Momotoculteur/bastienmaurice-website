# Shift Left Security Strategy

Bastien MAURICE
<!-- .slide: data-background="#009485" -->
<!-- .slide: class="center" -->
---
<div style="text-align: left;">

## Cycle de developpement traditionnel

Chaque dév ajoute des features et pousse en prod    
Absence de responsabilité autour de la sécurité  
Tests effectués en fin de cycle  

</div>


![cicd-pipeline](./img/cicd-pipeline.png)

---
<div style="text-align: left;">

## Conséquences

- Deploiement en prod long
- Et/ou risque de vulnérabilités si besoin de hotfix
</div>


---
<div style="text-align: left;">

## Shift Left

Aborder la sécurité au plus tôt dans le cycle de dev d'une application  
Décalage vers la gauche du traditionnel cycle de dev

</div>

---
<div style="text-align: left;">

## Shift Left - Atouts

- Meilleure collaboration entre équipe
- Meilleure qualité du produit 
    - Moins de vulnérabilité, détécté plus tôt
    - Plus de mise à jour et donc d'optimisation
- Diminution des couts

</div>
---
<div style="text-align: left;">

## SAST - Static Application Security Testing

Scan le code source de l'application

Ex:  
NodeJS -> npm audit  
Container Docker -> Trivy  
IaC -> Kics, Terrascan  
Cloud Provider -> Prowler  
Leaks -> GitLeaks  
</div>

![npm-audit](./img/npm-audit.png) <!-- .element: class="r-stretch" -->
---
<div style="text-align: left;">

## DAST - Dynamic Application Security Testing

Scan l'application une fois deployé

Ex:  
App web -> OWASP Zap Proxy  
</div>

![owasp-zap-proxy](./img/owasp-zap-proxy.png) 
---
<div style="text-align: left;">

## Un pas vers le DevSecOps

Mise en place de Shift Left :
- Automatisation via CI/CD
- Mise en place de Nightly
- Monitoring (Datadog, Grafana)
- Alerting (PagerDuty)

</div>
